<div>
	<h1>REAL TIME PRODUCTS</h1>

	<table id="products">
		
	</table>
<hr>
<br>
	<form action="" id="formAdd">
		<legend>ADD PRODUCT</legend>
			<div>
				<label for="title">Title</label>
				<input type="text" id="title" name="title" required>
			</div>
			<div>
				<label for="description">Description</label>
				<input type="text" id="description" name="description" required>
			</div>
			<div>
				<label for="category">Category</label>
				<input type="text" id="category" name="category" required>
			</div>
			<div>
				<label for="price">Price</label>
				<input type="text" id="price" name="price" required>
			</div>
			<div>
				<label for="code">Code</label>
				<input type="text" id="code" name="code" required>
			</div>
			<div>
				<label for="stock">Stock</label>
				<input type="number" id="stock" name="stock" required>
			</div>
			<br>
			<button type="submit">Add</button>
	</form>
<hr>
<br>
	<form action="" id="formDelete">
			<legend>DELETE PRODUCT</legend>
			<div>
				<label for="id">Id</label>
				<input type="number" id="id" name="id" required>
			</div>
			<br>
			<button type="submit">Delete</button>
	</form>


</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.1/socket.io.js"></script>
<script>

const socketClient = io();

const formAdd = document.getElementById("formAdd");
const formDelete = document.getElementById("formDelete");

const updateList = (array) => {
	
	const products = document.getElementById("products");
	while (products.firstChild){
  	products.removeChild(products.firstChild);
	};
		
	array.map(prod => {

	const trList = document.createElement("tr");
	const tdId = document.createElement("td");
	const tdTitle = document.createElement("td");
	const tdDescription = document.createElement("td");
	const tdCategory = document.createElement("td");
	const tdPrice = document.createElement("td");
	const tdThumbnail = document.createElement("td");
	const tdCode = document.createElement("td");
	const tdStock = document.createElement("td");
	const tdStatus = document.createElement("td");
	
	tdId.textContent = prod.id;
	tdTitle.textContent = prod.title;
	tdDescription.textContent = prod.description;
	tdCategory.textContent = prod.category;
	tdPrice.textContent = prod.price;
	tdThumbnail.textContent = prod.thumbnail;
	tdCode.textContent = prod.code;
	tdStock.textContent = prod.stock;
	tdStatus.textContent = prod.status;

	trList.appendChild(tdId);
	trList.appendChild(tdTitle);
	trList.appendChild(tdDescription);
	trList.appendChild(tdCategory);
	trList.appendChild(tdPrice);
	trList.appendChild(tdThumbnail);
	trList.appendChild(tdCode);
	trList.appendChild(tdStock);
	trList.appendChild(tdStatus);
	products.append(trList);

	});

};

socketClient.on("listProducts", (data) => {
	
	updateList(data);

});

formAdd.addEventListener("submit", () => {

	event.preventDefault();

	const title = document.getElementById("title").value;
	const description = document.getElementById("description").value;
	const category = document.getElementById("category").value;
	const price = document.getElementById("price").value;
	const code = document.getElementById("code").value;
	const stock = document.getElementById("stock").value;

	const newProduct = {
		title: title,
		description: description,
		category: category,
		price: Number(price),
		code: code,
		stock: Number(stock)
	};

	socketClient.emit("createProduct", newProduct);

	formAdd.reset();

});

formDelete.addEventListener("submit", () => {

	event.preventDefault();

	const id = document.getElementById("id").value;

	socketClient.emit("deleteProduct", Number(id));

	formDelete.reset();

});

socketClient.on("liveProducts", (data) => {

	updateList(data);

});


</script>
